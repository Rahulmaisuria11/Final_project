<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_c_i_c_l_e_8_c_p_p" kind="file" language="C++">
    <compoundname>CICLE.CPP</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">conio.h</includes>
    <includes local="no">graphics.h</includes>
    <incdepgraph>
      <node id="4">
        <label>graphics.h</label>
      </node>
      <node id="1">
        <label>CICLE.CPP</label>
        <link refid="_c_i_c_l_e_8_c_p_p"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>conio.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_c_i_c_l_e_8_c_p_p_1acdef7a1fd863a6d3770c1268cb06add3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CICLE.CPP" line="4" column="6" bodyfile="CICLE.CPP" bodystart="4" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;conio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;graphics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="_c_i_c_l_e_8_c_p_p_1acdef7a1fd863a6d3770c1268cb06add3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_i_c_l_e_8_c_p_p_1acdef7a1fd863a6d3770c1268cb06add3" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gd=DETECT,gm;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,dp,x,y,xc,yc;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">clrscr();</highlight></codeline>
<codeline lineno="9"><highlight class="normal">initgraph(&amp;gd,&amp;gm,</highlight><highlight class="stringliteral">&quot;c:/Tc/BG/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;enter<sp/>the<sp/>radius<sp/>of<sp/>circle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11"><highlight class="normal">scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="12"><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;enter<sp/>the<sp/>coordinator<sp/>of<sp/>circle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;xc);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;yc);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">dp=1-r;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">x=0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">y=r;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal">putpixel(xc+x,yc+y,RED);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">putpixel(xc-y,yc-x,RED);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">putpixel(xc+y,yc-x,RED);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">putpixel(xc-y,yc+x,RED);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">putpixel(xc+y,yc+x,RED);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">putpixel(xc-x,yc-y,RED);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">putpixel(xc+x,yc-y,RED);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">putpixel(xc-x,yc+y,RED);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">x=x+1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dp&lt;0)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal">dp=dp+2*x+1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal">y=y+1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">dp=dp+2*(x-y)+1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(x&lt;y);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">getch();</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="CICLE.CPP"/>
  </compounddef>
</doxygen>
